{"ast":null,"code":"var _jsxFileName = \"/Users/fran/Desktop/gelioX/client/src/components/OffCanvasEnd/OffCanvasEnd.jsx\";\n//hacer que funcione esto uffff\nimport { Offcanvas } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OffCanvasEnd = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Offcanvas, {\n      show: show,\n      onHide: handleClose,\n      ...props,\n      children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n          children: \"Offcanvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n        children: \"Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = OffCanvasEnd;\n\nfunction Example() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: ['start', 'end', 'top', 'bottom'].map((placement, idx) => /*#__PURE__*/_jsxDEV(OffCanvasExample, {\n      placement: placement,\n      name: placement\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n}\n\n_c2 = Example;\nrender( /*#__PURE__*/_jsxDEV(Example, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 8\n}, this));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OffCanvasEnd\");\n$RefreshReg$(_c2, \"Example\");","map":{"version":3,"sources":["/Users/fran/Desktop/gelioX/client/src/components/OffCanvasEnd/OffCanvasEnd.jsx"],"names":["Offcanvas","OffCanvasEnd","show","handleClose","props","Example","map","placement","idx","render"],"mappings":";AAAA;AAEA,SAASA,SAAT,QAA0B,iBAA1B;;;;AAIA,MAAMC,YAAY,GAAG,MAAM;AAEvB,sBACI;AAAA,2BACI,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEC,IAAjB;AAAuB,MAAA,MAAM,EAAEC,WAA/B;AAAA,SAAgDC,KAAhD;AAAA,8BACI,QAAC,SAAD,CAAW,MAAX;AAAkB,QAAA,WAAW,MAA7B;AAAA,+BACI,QAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAaH,CAfD;;KAAMH,Y;;AAiBN,SAASI,OAAT,GAAmB;AACf,sBACI;AAAA,cACK,CAAC,OAAD,EAAU,KAAV,EAAiB,KAAjB,EAAwB,QAAxB,EAAkCC,GAAlC,CAAsC,CAACC,SAAD,EAAYC,GAAZ,kBACnC,QAAC,gBAAD;AAA4B,MAAA,SAAS,EAAED,SAAvC;AAAkD,MAAA,IAAI,EAAEA;AAAxD,OAAuBC,GAAvB;AAAA;AAAA;AAAA;AAAA,YADH;AADL,mBADJ;AAOH;;MARQH,O;AAUTI,MAAM,eAAC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,QAAD,CAAN","sourcesContent":["//hacer que funcione esto uffff\n\nimport { Offcanvas } from \"react-bootstrap\";\n\n\n\nconst OffCanvasEnd = () => {\n\n    return (\n        <>\n            <Offcanvas show={show} onHide={handleClose} {...props}>\n                <Offcanvas.Header closeButton>\n                    <Offcanvas.Title>Offcanvas</Offcanvas.Title>\n                </Offcanvas.Header>\n                <Offcanvas.Body>\n                    Some text as placeholder. In real life you can have the elements you\n                    have chosen. Like, text, images, lists, etc.\n                </Offcanvas.Body>\n            </Offcanvas>\n        </>\n    );\n}\n\nfunction Example() {\n    return (\n        <>\n            {['start', 'end', 'top', 'bottom'].map((placement, idx) => (\n                <OffCanvasExample key={idx} placement={placement} name={placement} />\n            ))}\n        </>\n    );\n}\n\nrender(<Example />);\n\n"]},"metadata":{},"sourceType":"module"}