{"ast":null,"code":"var _jsxFileName = \"/Users/fran/Desktop/gelioX/client/src/components/LoginForm/LoginForm.jsx\";\n// import { useContext, useState } from \"react\"\n// import { Form, Button } from \"react-bootstrap\"\n// import authService from \"../../services/auth.service\"\n// import { useNavigate } from 'react-router-dom'\n// import { AuthContext } from './../../context/auth.context'\n// const Loginform = () => {\n//     const [loginData, setLoginData] = useState({\n//         password: '',\n//         email: ''\n//     })\n//     const navigate = useNavigate()\n//     const { storeToken, authenticateUser } = useContext(AuthContext)\n//     const handleSubmit = e => {\n//         e.preventDefault()\n//         authService\n//             .login(loginData)\n//             .then(({ data }) => {\n//                 storeToken(data.authToken)\n//                 authenticateUser()\n//                 navigate('/')\n//             })\n//             .catch(err => console.log(err))\n//     }\n//     const handleInputChange = e => {\n//         const { value, name } = e.currentTarget\n//         setLoginData({ ...loginData, [name]: value })\n//     }\n//     const { password, email } = loginData\n//     return (\n//         <Form onSubmit={handleSubmit}>\n//             <Form.Group className=\"mb-3\" controlId=\"email\">\n//                 <Form.Label>Email</Form.Label>\n//                 <Form.Control type=\"email\" onChange={handleInputChange} name=\"email\" value={email} />\n//             </Form.Group>\n//             <Form.Group className=\"mb-3\" controlId=\"password\">\n//                 <Form.Label>Contraseña</Form.Label>\n//                 <Form.Control type=\"password\" onChange={handleInputChange} name=\"password\" value={password} />\n//             </Form.Group>\n//             <Button variant=\"dark\" type=\"submit\">Acceder</Button>\n//         </Form>\n//     )\n// }\nimport React from 'react';\nimport { Formik } from 'formik';\nimport { BasicForm } from '../../components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Loginform = values => {\n  let errors = {};\n\n  if (!values.name) {\n    errors.name = 'Name is required!';\n  } else if (values.name.length <= 1) {\n    errors.name = 'Name has to be 1 character at less!';\n  }\n\n  if (!values.lastName) {\n    errors.lastName = 'Last name is required!';\n  }\n\n  if (!values.team) {\n    errors.team = 'Team is required!';\n  } else if (values.team.length < 2) {\n    errors.team = 'Team is required!';\n  }\n\n  if (!values.number) {\n    errors.number = 'Number is required!';\n  } else if (isNaN(values.number)) {\n    errors.number = 'Must be a number!';\n  }\n\n  return errors;\n};\n\n_c = Loginform;\n\nconst Basic = () => /*#__PURE__*/_jsxDEV(Formik, {\n  initialValues: {\n    name: '',\n    lastName: '',\n    number: '',\n    position: 'pg',\n    team: ''\n  },\n  onSubmit: (values, actions) => {\n    setTimeout(() => {\n      console.log(values);\n      console.log(actions);\n      actions.setSubmitting(false);\n    }, 2000);\n  },\n  validate: Loginform,\n  children: props => /*#__PURE__*/_jsxDEV(BasicForm, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 19\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 91,\n  columnNumber: 5\n}, this);\n\n_c2 = Basic;\nexport default Loginform;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Loginform\");\n$RefreshReg$(_c2, \"Basic\");","map":{"version":3,"sources":["/Users/fran/Desktop/gelioX/client/src/components/LoginForm/LoginForm.jsx"],"names":["React","Formik","BasicForm","Loginform","values","errors","name","length","lastName","team","number","isNaN","Basic","position","actions","setTimeout","console","log","setSubmitting","props"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAIA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,SAAS,GAAGC,MAAM,IAAI;AACxB,MAAIC,MAAM,GAAG,EAAb;;AAEA,MAAI,CAACD,MAAM,CAACE,IAAZ,EAAkB;AACdD,IAAAA,MAAM,CAACC,IAAP,GAAc,mBAAd;AACH,GAFD,MAEO,IAAIF,MAAM,CAACE,IAAP,CAAYC,MAAZ,IAAsB,CAA1B,EAA6B;AAChCF,IAAAA,MAAM,CAACC,IAAP,GAAc,qCAAd;AACH;;AACD,MAAI,CAACF,MAAM,CAACI,QAAZ,EAAsB;AAClBH,IAAAA,MAAM,CAACG,QAAP,GAAkB,wBAAlB;AACH;;AACD,MAAI,CAACJ,MAAM,CAACK,IAAZ,EAAkB;AACdJ,IAAAA,MAAM,CAACI,IAAP,GAAc,mBAAd;AACH,GAFD,MAGK,IAAIL,MAAM,CAACK,IAAP,CAAYF,MAAZ,GAAqB,CAAzB,EAA4B;AAC7BF,IAAAA,MAAM,CAACI,IAAP,GAAc,mBAAd;AACH;;AACD,MAAI,CAACL,MAAM,CAACM,MAAZ,EAAoB;AAChBL,IAAAA,MAAM,CAACK,MAAP,GAAgB,qBAAhB;AACH,GAFD,MAEO,IAAIC,KAAK,CAACP,MAAM,CAACM,MAAR,CAAT,EAA0B;AAC7BL,IAAAA,MAAM,CAACK,MAAP,GAAgB,mBAAhB;AACH;;AACD,SAAOL,MAAP;AACH,CAvBD;;KAAMF,S;;AAyBN,MAAMS,KAAK,GAAG,mBACV,QAAC,MAAD;AACI,EAAA,aAAa,EAAE;AACXN,IAAAA,IAAI,EAAE,EADK;AAEXE,IAAAA,QAAQ,EAAE,EAFC;AAGXE,IAAAA,MAAM,EAAE,EAHG;AAIXG,IAAAA,QAAQ,EAAE,IAJC;AAKXJ,IAAAA,IAAI,EAAE;AALK,GADnB;AAQI,EAAA,QAAQ,EAAE,CAACL,MAAD,EAASU,OAAT,KAAqB;AAC3BC,IAAAA,UAAU,CAAC,MAAM;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYb,MAAZ;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAA,MAAAA,OAAO,CAACI,aAAR,CAAsB,KAAtB;AACH,KAJS,EAIP,IAJO,CAAV;AAKH,GAdL;AAeI,EAAA,QAAQ,EAAEf,SAfd;AAAA,YAiBKgB,KAAK,iBAAI,QAAC,SAAD,OAAeA;AAAf;AAAA;AAAA;AAAA;AAAA;AAjBd;AAAA;AAAA;AAAA;AAAA,QADJ;;MAAMP,K;AAsBN,eAAeT,SAAf","sourcesContent":["// import { useContext, useState } from \"react\"\n// import { Form, Button } from \"react-bootstrap\"\n// import authService from \"../../services/auth.service\"\n// import { useNavigate } from 'react-router-dom'\n// import { AuthContext } from './../../context/auth.context'\n\n\n// const Loginform = () => {\n\n//     const [loginData, setLoginData] = useState({\n//         password: '',\n//         email: ''\n//     })\n\n//     const navigate = useNavigate()\n\n//     const { storeToken, authenticateUser } = useContext(AuthContext)\n\n//     const handleSubmit = e => {\n//         e.preventDefault()\n\n//         authService\n//             .login(loginData)\n//             .then(({ data }) => {\n//                 storeToken(data.authToken)\n//                 authenticateUser()\n//                 navigate('/')\n//             })\n//             .catch(err => console.log(err))\n//     }\n\n//     const handleInputChange = e => {\n//         const { value, name } = e.currentTarget\n//         setLoginData({ ...loginData, [name]: value })\n//     }\n\n//     const { password, email } = loginData\n\n\n\n//     return (\n\n//         <Form onSubmit={handleSubmit}>\n\n//             <Form.Group className=\"mb-3\" controlId=\"email\">\n//                 <Form.Label>Email</Form.Label>\n//                 <Form.Control type=\"email\" onChange={handleInputChange} name=\"email\" value={email} />\n//             </Form.Group>\n\n//             <Form.Group className=\"mb-3\" controlId=\"password\">\n//                 <Form.Label>Contraseña</Form.Label>\n//                 <Form.Control type=\"password\" onChange={handleInputChange} name=\"password\" value={password} />\n//             </Form.Group>\n\n//             <Button variant=\"dark\" type=\"submit\">Acceder</Button>\n//         </Form>\n\n//     )\n// }\n\nimport React from 'react';\nimport { Formik } from 'formik';\nimport { BasicForm } from '../../components';\n\nconst Loginform = values => {\n    let errors = {};\n\n    if (!values.name) {\n        errors.name = 'Name is required!';\n    } else if (values.name.length <= 1) {\n        errors.name = 'Name has to be 1 character at less!';\n    }\n    if (!values.lastName) {\n        errors.lastName = 'Last name is required!';\n    }\n    if (!values.team) {\n        errors.team = 'Team is required!';\n    }\n    else if (values.team.length < 2) {\n        errors.team = 'Team is required!';\n    }\n    if (!values.number) {\n        errors.number = 'Number is required!';\n    } else if (isNaN(values.number)) {\n        errors.number = 'Must be a number!';\n    }\n    return errors;\n}\n\nconst Basic = () => (\n    <Formik\n        initialValues={{\n            name: '',\n            lastName: '',\n            number: '',\n            position: 'pg',\n            team: '',\n        }}\n        onSubmit={(values, actions) => {\n            setTimeout(() => {\n                console.log(values)\n                console.log(actions)\n                actions.setSubmitting(false);\n            }, 2000);\n        }}\n        validate={Loginform}\n    >\n        {props => <BasicForm {...props} />}\n    </Formik>\n);\n\nexport default Loginform;\n\n\n\n"]},"metadata":{},"sourceType":"module"}