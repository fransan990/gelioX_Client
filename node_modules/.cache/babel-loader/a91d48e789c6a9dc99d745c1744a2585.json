{"ast":null,"code":"var _jsxFileName = \"/Users/fran/Desktop/gelioX/client/src/components/LoginForm/LoginForm.jsx\",\n    _s = $RefreshSig$();\n\n// import { useContext, useState } from \"react\"\n// import { Form, Button } from \"react-bootstrap\"\n// import authService from \"../../services/auth.service\"\n// import { useNavigate } from 'react-router-dom'\n// import { AuthContext } from './../../context/auth.context'\n// const Loginform = () => {\n//     const [loginData, setLoginData] = useState({\n//         password: '',\n//         email: ''\n//     })\n//     const navigate = useNavigate()\n//     const { storeToken, authenticateUser } = useContext(AuthContext)\n//     const handleSubmit = e => {\n//         e.preventDefault()\n//         authService\n//             .login(loginData)\n//             .then(({ data }) => {\n//                 storeToken(data.authToken)\n//                 authenticateUser()\n//                 navigate('/')\n//             })\n//             .catch(err => console.log(err))\n//     }\n//     const handleInputChange = e => {\n//         const { value, name } = e.currentTarget\n//         setLoginData({ ...loginData, [name]: value })\n//     }\n//     const { password, email } = loginData\n//     return (\n//         <Form onSubmit={handleSubmit}>\n//             <Form.Group className=\"mb-3\" controlId=\"email\">\n//                 <Form.Label>Email</Form.Label>\n//                 <Form.Control type=\"email\" onChange={handleInputChange} name=\"email\" value={email} />\n//             </Form.Group>\n//             <Form.Group className=\"mb-3\" controlId=\"password\">\n//                 <Form.Label>Contraseña</Form.Label>\n//                 <Form.Control type=\"password\" onChange={handleInputChange} name=\"password\" value={password} />\n//             </Form.Group>\n//             <Button variant=\"dark\" type=\"submit\">Acceder</Button>\n//         </Form>\n//     )\n// }\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { FormikProvider, Form, useField } from 'formik';\nimport './loginForm.css';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sleep = ms => new Promise(r => setTimeout(r, ms));\n\nconst Loginform = _ref => {\n  _s();\n\n  let {\n    label,\n    helpText,\n    ...props\n  } = _ref;\n  const [field, meta] = useField(props); // Show inline feedback if EITHER\n  // - the input is focused AND value is longer than 2 characters\n  // - or, the has been visited (touched === true)\n\n  const [didFocus, setDidFocus] = React.useState(false);\n\n  const handleFocus = () => setDidFocus(true);\n\n  const showFeedback = !!didFocus && field.value.trim().length > 2 || meta.touched;\n  return /*#__PURE__*/_jsxDEV(FormikProvider, {\n    value: formik,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Loginform, {\n        label: \"Username\",\n        id: \"username\",\n        name: \"username\",\n        helpText: \"Must be 8-20 characters and cannot contain special characters.\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Example, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"reset\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Loginform, \"71Fc7TLzi7UJjyV7Pe8VU57I03Q=\", false, function () {\n  return [useField];\n});\n\n_c = Loginform;\nexport default Loginform;\n\nvar _c;\n\n$RefreshReg$(_c, \"Loginform\");","map":{"version":3,"sources":["/Users/fran/Desktop/gelioX/client/src/components/LoginForm/LoginForm.jsx"],"names":["React","ReactDOM","FormikProvider","Form","useField","Yup","sleep","ms","Promise","r","setTimeout","Loginform","label","helpText","props","field","meta","didFocus","setDidFocus","useState","handleFocus","showFeedback","value","trim","length","touched","formik"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAIA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,cAAT,EAAyBC,IAAzB,EAA+BC,QAA/B,QAA+C,QAA/C;AACA,OAAO,iBAAP;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;;AAEA,MAAMC,KAAK,GAAIC,EAAD,IAAQ,IAAIC,OAAJ,CAAaC,CAAD,IAAOC,UAAU,CAACD,CAAD,EAAIF,EAAJ,CAA7B,CAAtB;;AAEA,MAAMI,SAAS,GAAG,QAAmC;AAAA;;AAAA,MAAlC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmB,OAAGC;AAAtB,GAAkC;AACjD,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBZ,QAAQ,CAACU,KAAD,CAA9B,CADiD,CAGjD;AACA;AACA;;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BlB,KAAK,CAACmB,QAAN,CAAe,KAAf,CAAhC;;AACA,QAAMC,WAAW,GAAG,MAAMF,WAAW,CAAC,IAAD,CAArC;;AACA,QAAMG,YAAY,GACb,CAAC,CAACJ,QAAF,IAAcF,KAAK,CAACO,KAAN,CAAYC,IAAZ,GAAmBC,MAAnB,GAA4B,CAA3C,IAAiDR,IAAI,CAACS,OAD1D;AAGA,sBAEI,QAAC,cAAD;AAAgB,IAAA,KAAK,EAAEC,MAAvB;AAAA,2BACI,QAAC,IAAD;AAAA,8BACI,QAAC,SAAD;AACI,QAAA,KAAK,EAAC,UADV;AAEI,QAAA,EAAE,EAAC,UAFP;AAGI,QAAA,IAAI,EAAC,UAHT;AAII,QAAA,QAAQ,EAAC,gEAJb;AAKI,QAAA,IAAI,EAAC;AALT;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cARJ,eAUI;AAAA,gCACI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,IAAI,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAqBH,CAhCD;;GAAMf,S;UACoBP,Q;;;KADpBO,S;AAmCN,eAAeA,SAAf","sourcesContent":["// import { useContext, useState } from \"react\"\n// import { Form, Button } from \"react-bootstrap\"\n// import authService from \"../../services/auth.service\"\n// import { useNavigate } from 'react-router-dom'\n// import { AuthContext } from './../../context/auth.context'\n\n\n// const Loginform = () => {\n\n//     const [loginData, setLoginData] = useState({\n//         password: '',\n//         email: ''\n//     })\n\n//     const navigate = useNavigate()\n\n//     const { storeToken, authenticateUser } = useContext(AuthContext)\n\n//     const handleSubmit = e => {\n//         e.preventDefault()\n\n//         authService\n//             .login(loginData)\n//             .then(({ data }) => {\n//                 storeToken(data.authToken)\n//                 authenticateUser()\n//                 navigate('/')\n//             })\n//             .catch(err => console.log(err))\n//     }\n\n//     const handleInputChange = e => {\n//         const { value, name } = e.currentTarget\n//         setLoginData({ ...loginData, [name]: value })\n//     }\n\n//     const { password, email } = loginData\n\n\n\n//     return (\n\n//         <Form onSubmit={handleSubmit}>\n\n//             <Form.Group className=\"mb-3\" controlId=\"email\">\n//                 <Form.Label>Email</Form.Label>\n//                 <Form.Control type=\"email\" onChange={handleInputChange} name=\"email\" value={email} />\n//             </Form.Group>\n\n//             <Form.Group className=\"mb-3\" controlId=\"password\">\n//                 <Form.Label>Contraseña</Form.Label>\n//                 <Form.Control type=\"password\" onChange={handleInputChange} name=\"password\" value={password} />\n//             </Form.Group>\n\n//             <Button variant=\"dark\" type=\"submit\">Acceder</Button>\n//         </Form>\n\n//     )\n// }\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { FormikProvider, Form, useField } from 'formik';\nimport './loginForm.css';\nimport * as Yup from 'yup';\n\nconst sleep = (ms) => new Promise((r) => setTimeout(r, ms));\n\nconst Loginform = ({ label, helpText, ...props }) => {\n    const [field, meta] = useField(props);\n\n    // Show inline feedback if EITHER\n    // - the input is focused AND value is longer than 2 characters\n    // - or, the has been visited (touched === true)\n    const [didFocus, setDidFocus] = React.useState(false);\n    const handleFocus = () => setDidFocus(true);\n    const showFeedback =\n        (!!didFocus && field.value.trim().length > 2) || meta.touched;\n\n    return (\n\n        <FormikProvider value={formik}>\n            <Form>\n                <Loginform\n                    label=\"Username\"\n                    id=\"username\"\n                    name=\"username\"\n                    helpText=\"Must be 8-20 characters and cannot contain special characters.\"\n                    type=\"text\"\n                />\n                <Example />\n\n                <div>\n                    <button type=\"submit\">Submit</button>\n                    <button type=\"reset\">Reset</button>\n                </div>\n            </Form>\n        </FormikProvider>\n\n    );\n};\n\n\nexport default Loginform"]},"metadata":{},"sourceType":"module"}