{"ast":null,"code":"var _jsxFileName = \"/Users/fran/Desktop/gelioX/client/src/context/products.context.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport productService from '../services/product.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductContext = /*#__PURE__*/createContext();\n\nfunction ProductProviderWrapper(props) {\n  _s();\n\n  const [products, setProducts] = useState();\n  const [updateStatus, setUpdateStatus] = useState(true);\n  useEffect(() => {\n    updateStatus && loadproducts();\n  }, [updateStatus]);\n\n  const loadproducts = () => {\n    productService.getAllProducts().then(_ref => {\n      let {\n        data\n      } = _ref;\n      console.log('estoy renovandome los productos');\n      setProducts(data);\n      setUpdateStatus(false);\n    }).then(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n    value: {\n      products,\n      setUpdateStatus\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductProviderWrapper, \"OWjVm/GEgq4QovqCu+A5bHD0hlw=\");\n\n_c = ProductProviderWrapper;\nexport { ProductContext, ProductProviderWrapper };\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductProviderWrapper\");","map":{"version":3,"sources":["/Users/fran/Desktop/gelioX/client/src/context/products.context.js"],"names":["React","createContext","useState","useEffect","productService","ProductContext","ProductProviderWrapper","props","products","setProducts","updateStatus","setUpdateStatus","loadproducts","getAllProducts","then","data","console","log","err","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAOC,cAAP,MAA2B,6BAA3B;;AAGA,MAAMC,cAAc,gBAAGJ,aAAa,EAApC;;AAEA,SAASK,sBAAT,CAAgCC,KAAhC,EAAuC;AAAA;;AAEnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,EAAxC;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,IAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,YAAY,IAAIE,YAAY,EAA5B;AACH,GAFQ,EAEN,CAACF,YAAD,CAFM,CAAT;;AAIA,QAAME,YAAY,GAAG,MAAM;AAEvBR,IAAAA,cAAc,CACTS,cADL,GAEKC,IAFL,CAEU,QAAc;AAAA,UAAb;AAAEC,QAAAA;AAAF,OAAa;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACAR,MAAAA,WAAW,CAACM,IAAD,CAAX;AACAJ,MAAAA,eAAe,CAAC,KAAD,CAAf;AACH,KANL,EAOKG,IAPL,CAOUI,GAAG,IAAIF,OAAO,CAACC,GAAR,CAAYC,GAAZ,CAPjB;AAQH,GAVD;;AAYA,sBACI,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAEV,MAAAA,QAAF;AAAYG,MAAAA;AAAZ,KAAhC;AAAA,cACKJ,KAAK,CAACY;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA1BQb,sB;;KAAAA,sB;AA4BT,SAASD,cAAT,EAAyBC,sBAAzB","sourcesContent":["import React, { createContext, useState, useEffect } from 'react'\nimport productService from '../services/product.service'\n\n\nconst ProductContext = createContext()\n\nfunction ProductProviderWrapper(props) {\n\n    const [products, setProducts] = useState()\n    const [updateStatus, setUpdateStatus] = useState(true)\n\n    useEffect(() => {\n        updateStatus && loadproducts()\n    }, [updateStatus])\n\n    const loadproducts = () => {\n\n        productService\n            .getAllProducts()\n            .then(({ data }) => {\n                console.log('estoy renovandome los productos')\n                setProducts(data)\n                setUpdateStatus(false)\n            })\n            .then(err => console.log(err))\n    }\n\n    return (\n        <ProductContext.Provider value={{ products, setUpdateStatus }}>\n            {props.children}\n        </ProductContext.Provider>\n    )\n}\n\nexport { ProductContext, ProductProviderWrapper }"]},"metadata":{},"sourceType":"module"}